/*
 * OneSignal
 *
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 5.0.1
 * Contact: devrel@onesignal.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = OneSignalApi.Client.OpenAPIDateConverter;

namespace OneSignalApi.Model
{
    /// <summary>
    /// Hash of delivery statistics broken out by target device platform.
    /// </summary>
    [DataContract(Name = "PlatformDeliveryData")]
    public partial class PlatformDeliveryData : IEquatable<PlatformDeliveryData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlatformDeliveryData" /> class.
        /// </summary>
        /// <param name="edgeWebPush">edgeWebPush.</param>
        /// <param name="chromeWebPush">chromeWebPush.</param>
        /// <param name="firefoxWebPush">firefoxWebPush.</param>
        /// <param name="safariWebPush">safariWebPush.</param>
        /// <param name="android">android.</param>
        /// <param name="ios">ios.</param>
        /// <param name="sms">sms.</param>
        /// <param name="email">email.</param>
        public PlatformDeliveryData(DeliveryData edgeWebPush = default(DeliveryData), DeliveryData chromeWebPush = default(DeliveryData), DeliveryData firefoxWebPush = default(DeliveryData), DeliveryData safariWebPush = default(DeliveryData), DeliveryData android = default(DeliveryData), DeliveryData ios = default(DeliveryData), DeliveryData sms = default(DeliveryData), DeliveryData email = default(DeliveryData))
        {
            this.EdgeWebPush = edgeWebPush;
            this.ChromeWebPush = chromeWebPush;
            this.FirefoxWebPush = firefoxWebPush;
            this.SafariWebPush = safariWebPush;
            this.Android = android;
            this.Ios = ios;
            this.Sms = sms;
            this.Email = email;
        }

        /// <summary>
        /// Gets or Sets EdgeWebPush
        /// </summary>
        [DataMember(Name = "edge_web_push", EmitDefaultValue = false)]
        public DeliveryData EdgeWebPush { get; set; }

        /// <summary>
        /// Gets or Sets ChromeWebPush
        /// </summary>
        [DataMember(Name = "chrome_web_push", EmitDefaultValue = false)]
        public DeliveryData ChromeWebPush { get; set; }

        /// <summary>
        /// Gets or Sets FirefoxWebPush
        /// </summary>
        [DataMember(Name = "firefox_web_push", EmitDefaultValue = false)]
        public DeliveryData FirefoxWebPush { get; set; }

        /// <summary>
        /// Gets or Sets SafariWebPush
        /// </summary>
        [DataMember(Name = "safari_web_push", EmitDefaultValue = false)]
        public DeliveryData SafariWebPush { get; set; }

        /// <summary>
        /// Gets or Sets Android
        /// </summary>
        [DataMember(Name = "android", EmitDefaultValue = false)]
        public DeliveryData Android { get; set; }

        /// <summary>
        /// Gets or Sets Ios
        /// </summary>
        [DataMember(Name = "ios", EmitDefaultValue = false)]
        public DeliveryData Ios { get; set; }

        /// <summary>
        /// Gets or Sets Sms
        /// </summary>
        [DataMember(Name = "sms", EmitDefaultValue = true)]
        public DeliveryData Sms { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = true)]
        public DeliveryData Email { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlatformDeliveryData {\n");
            sb.Append("  EdgeWebPush: ").Append(EdgeWebPush).Append("\n");
            sb.Append("  ChromeWebPush: ").Append(ChromeWebPush).Append("\n");
            sb.Append("  FirefoxWebPush: ").Append(FirefoxWebPush).Append("\n");
            sb.Append("  SafariWebPush: ").Append(SafariWebPush).Append("\n");
            sb.Append("  Android: ").Append(Android).Append("\n");
            sb.Append("  Ios: ").Append(Ios).Append("\n");
            sb.Append("  Sms: ").Append(Sms).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PlatformDeliveryData);
        }

        /// <summary>
        /// Returns true if PlatformDeliveryData instances are equal
        /// </summary>
        /// <param name="input">Instance of PlatformDeliveryData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlatformDeliveryData input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EdgeWebPush == input.EdgeWebPush ||
                    (this.EdgeWebPush != null &&
                    this.EdgeWebPush.Equals(input.EdgeWebPush))
                ) && 
                (
                    this.ChromeWebPush == input.ChromeWebPush ||
                    (this.ChromeWebPush != null &&
                    this.ChromeWebPush.Equals(input.ChromeWebPush))
                ) && 
                (
                    this.FirefoxWebPush == input.FirefoxWebPush ||
                    (this.FirefoxWebPush != null &&
                    this.FirefoxWebPush.Equals(input.FirefoxWebPush))
                ) && 
                (
                    this.SafariWebPush == input.SafariWebPush ||
                    (this.SafariWebPush != null &&
                    this.SafariWebPush.Equals(input.SafariWebPush))
                ) && 
                (
                    this.Android == input.Android ||
                    (this.Android != null &&
                    this.Android.Equals(input.Android))
                ) && 
                (
                    this.Ios == input.Ios ||
                    (this.Ios != null &&
                    this.Ios.Equals(input.Ios))
                ) && 
                (
                    this.Sms == input.Sms ||
                    (this.Sms != null &&
                    this.Sms.Equals(input.Sms))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EdgeWebPush != null)
                {
                    hashCode = (hashCode * 59) + this.EdgeWebPush.GetHashCode();
                }
                if (this.ChromeWebPush != null)
                {
                    hashCode = (hashCode * 59) + this.ChromeWebPush.GetHashCode();
                }
                if (this.FirefoxWebPush != null)
                {
                    hashCode = (hashCode * 59) + this.FirefoxWebPush.GetHashCode();
                }
                if (this.SafariWebPush != null)
                {
                    hashCode = (hashCode * 59) + this.SafariWebPush.GetHashCode();
                }
                if (this.Android != null)
                {
                    hashCode = (hashCode * 59) + this.Android.GetHashCode();
                }
                if (this.Ios != null)
                {
                    hashCode = (hashCode * 59) + this.Ios.GetHashCode();
                }
                if (this.Sms != null)
                {
                    hashCode = (hashCode * 59) + this.Sms.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
